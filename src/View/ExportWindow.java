/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Helper.OsRelated;
import Helper.SavedVariables;
import Helper.Utils;
import TexRessources.TexWriter;
import exerciceexplorer.Exercice;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Enumeration;
import java.util.List;
import javax.swing.event.ChangeEvent;
import org.fife.ui.autocomplete.AutoCompletion;
import org.fife.ui.autocomplete.BasicCompletion;
import org.fife.ui.autocomplete.DefaultCompletionProvider;

/**
 *
 * @author mbrebion
 */
public class ExportWindow extends javax.swing.JFrame {

    protected String kind;
    protected String base;
    protected String exportLoc;
    protected AutoCompletion acb;
    protected CreationCompoView ccv;

    /**
     * Creates new form ExportWindow
     *
     * @param ccv
     */
    public ExportWindow(CreationCompoView ccv) {
        initComponents();
        this.ccv = ccv;
        kind = ccv.getOutputType();

        if (kind == "DS" || kind == "DM") {
            jSlider1.setValue(2);
        } else {
            jSlider1.setValue(1);
        }
        jSlider1StateChanged(null);

        this.fillExportDirChoices();
        this.nameField.setText("");
        this.nameField.selectAll();
        this.nameField.requestFocusInWindow();
        acb.doCompletion();

        Utils.addChangeListener(nameField, (ChangeEvent e) -> {
            updateExportLoc();
        });
        this.pack();

    }

    protected final void fillExportDirChoices() {

        base = SavedVariables.getOutputDir();
        File f = new File(base);
        this.jComboBox1.removeAllItems();
        int count = 0;
        for (String s : f.list((File dir, String name1) -> name1.startsWith(kind))) {
            this.jComboBox1.addItem(s);
            count++;
        }
        this.dirPanel.setVisible(count != 1);
    }

    protected void updateAC() {
        String dir = base + "/" + ((String) jComboBox1.getSelectedItem());
        File f = new File(dir);

        DefaultCompletionProvider provider = new DefaultCompletionProvider();
        provider.setAutoActivationRules(true, null);

        if (acb != null) {
            // uninstall acb if it already exists
            acb.uninstall();
        }

        acb = new AutoCompletion(provider);
        acb.setParameterDescriptionTruncateThreshold(20);
        //acb.setShowDescWindow(true);
        acb.setAutoCompleteEnabled(true);
        acb.setAutoActivationEnabled(true);
        acb.setAutoCompleteSingleChoices(true);
        acb.setChoicesWindowSize(260, 90);
        acb.setAutoActivationDelay(5);

        try {
            for (String s : f.list()) {
                provider.addCompletion(new BasicCompletion(provider, s));
            }
        } catch (Exception e) {
        }
        acb.install(nameField);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        nameField = new javax.swing.JTextField();
        dirPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();

        jLabel1.setText("Liens");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Export de la composition");
        jLabel2.setToolTipText("");

        jLabel3.setText("Copies");

        jSlider1.setMajorTickSpacing(1);
        jSlider1.setMaximum(2);
        jSlider1.setMinimum(1);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(javax.swing.UIManager.getDefaults().getColor("Label.background"));
        jTextArea1.setColumns(20);
        jTextArea1.setRows(3);
        jTextArea1.setTabSize(4);
        jTextArea1.setAutoscrolls(false);
        jTextArea1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informations", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 2, 13))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        jLabel5.setText("jLabel5");

        jLabel6.setText("Titre");

        jButton1.setText("Exporter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        nameField.setColumns(15);
        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });

        jLabel4.setText("Dossier d'export : ");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dirPanelLayout = new javax.swing.GroupLayout(dirPanel);
        dirPanel.setLayout(dirPanelLayout);
        dirPanelLayout.setHorizontalGroup(
            dirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dirPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(8, 8, 8)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        dirPanelLayout.setVerticalGroup(
            dirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dirPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(dirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 1, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(dirPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(nameField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextArea1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(12, 12, 12)
                .addComponent(dirPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        if (jSlider1.getValue() == 1) {
            jTextArea1.setText("Seuls les liens vers les exercices sont exportés. \nLe fichier exporté pourra de plus être ré-ouvert par l'IHM");
        } else {
            jTextArea1.setText("L'intégralité des fichiers associés à la composition sont exportés. \nCe type d'export permet de garder une trace pérène d'un sujet \nCependant, il ne pourra pas être ré-ouvert par l'IHM.");
        }
        this.fillExportDirChoices();
        this.updateExportLoc();
    }//GEN-LAST:event_jSlider1StateChanged

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        this.jLabel5.setText("export");
        this.updateAC();
        this.updateExportLoc();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (jSlider1.getValue() == 1) {
            this.exportLinks();
        } else {
            this.exportCopy();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        this.updateExportLoc();
    }//GEN-LAST:event_nameFieldActionPerformed

    protected void exportCopy() {
        File compoDir = new File(exportLoc);
        compoDir.mkdir();

        // output subject.tex
        List<String> cc = TexWriter.createTexFile(ccv.selectedExericesModel.elements(), kind, true, false);
        OsRelated.writeToFile(cc, compoDir + "/" + nameField.getText() + ".tex");
        Enumeration<Exercice> exercices = ccv.selectedExericesModel.elements();
        SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy");
        while (exercices.hasMoreElements()) {
            Exercice exo = exercices.nextElement();

            // update of lasttime file
            List<String> lines = OsRelated.readFile(exo.getlastTimePath());
            List<String> outLines = new ArrayList<>();

            outLines.add(formatter.format(new Date()) + " : " + nameField.getText());
            if (lines.isEmpty()) {
                // in this case, the file is empty or do not exist yet
                OsRelated.writeToFile(outLines, exo.getlastTimePath());
            } else {
                OsRelated.appendToFile(outLines, exo.getlastTimePath());
            }

            // hard copy
            OsRelated.copy(exo.getPath(), compoDir.getPath());
        }
        // copy of file raccourcis_communs.sty : 
        OsRelated.copy(SavedVariables.getMainGitDir() + "/fichiers_utiles/raccourcis_communs.sty", compoDir.getPath());
        OsRelated.open(exportLoc);
        this.setVisible(false);
    }

    protected void exportLinks() {
        Enumeration<Exercice> elements = ccv.selectedExericesModel.elements();

        List<String> lines = new ArrayList<>();
        lines.add("# type: " + kind);

        lines.add("# numero: " + nameField.getText().replaceAll("[^0-9]", ""));

        lines.add("# titre : " + nameField.getText().replaceAll("[0-9]", ""));
        lines.add("");

        while (elements.hasMoreElements()) {
            Exercice e = elements.nextElement();
            lines.add(e.getPath());

        }
        OsRelated.writeToFile(lines, exportLoc);
        OsRelated.open(exportLoc);
        this.setVisible(false);

    }

    protected void updateExportLoc() {
        this.exportLoc = base + "/" + ((String) jComboBox1.getSelectedItem()) + "/" + this.nameField.getText();
        if (jSlider1.getValue() == 1 && !exportLoc.endsWith(".txt")) {
            exportLoc += ".txt";
        }
        this.jLabel5.setText("export vers : " + exportLoc);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel dirPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField nameField;
    // End of variables declaration//GEN-END:variables

}
